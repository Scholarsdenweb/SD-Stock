# Generated by Django 5.2 on 2025-10-13 09:58

import datetime
import django.core.validators
import django.db.models.deletion
import django.db.models.functions.text
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=254)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('loc_type', models.CharField(choices=[('store', 'Store'), ('room', 'Room'), ('lab', 'Lab'), ('classroom', 'Classroom')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField(default=datetime.datetime.now)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('approved', 'Approved'), ('received', 'Received'), ('cancelled', 'Cancelled')], default='draft', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollement', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('receipt', models.CharField(blank=True, max_length=5, null=True, unique=True, validators=[django.core.validators.RegexValidator('^\\d+$')])),
                ('name', models.CharField(max_length=100)),
                ('father_name', models.CharField(blank=True, max_length=100, null=True, verbose_name="Father's name")),
                ('batch', models.CharField(blank=True, max_length=50, null=True)),
                ('roll', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^(\\+?\\d{2})?\\d{10}$')])),
                ('date_of_birth', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_name', models.CharField(max_length=50)),
                ('contact_person', models.CharField(max_length=50)),
                ('phone', models.CharField(blank=True, max_length=50, validators=[django.core.validators.RegexValidator('^(\\+?\\d{2})?\\d{10}$', message='Please enter a valid mobile number. Example +919999998888 or 7925666666')])),
                ('email', models.EmailField(blank=True, default='', max_length=254, unique=True)),
                ('gst', models.CharField(blank=True, max_length=50)),
                ('address', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Allocations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('allocated_date', models.DateField(default=datetime.datetime.now)),
                ('allocated_to', models.PositiveIntegerField(blank=True, null=True)),
                ('contenttype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('issued_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Allocations',
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollement', models.CharField(max_length=20, verbose_name='Enrollement Number')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('issue_date', models.DateTimeField(auto_now_add=True)),
                ('last_upated', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('send_message', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Issuing autority')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.category')),
            ],
        ),
        migrations.CreateModel(
            name='IssueItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.issue')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.item')),
            ],
        ),
        migrations.AddField(
            model_name='issue',
            name='items',
            field=models.ManyToManyField(related_name='kit_items', through='stock.IssueItem', to='stock.item'),
        ),
        migrations.CreateModel(
            name='GoodsReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recieved_date', models.DateField(default=datetime.datetime.now)),
                ('invoice_number', models.CharField(max_length=50)),
                ('invoice_file', models.ImageField(blank=True, null=True, upload_to='invoice/')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.purchaseorder')),
            ],
        ),
        migrations.AddField(
            model_name='issue',
            name='student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.student'),
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('sku', models.CharField(blank=True, max_length=50)),
                ('meta_data', models.JSONField(blank=True, null=True)),
                ('is_serialized', models.BooleanField(default=False, verbose_name='Have serial number')),
                ('is_active', models.BooleanField(default=True)),
                ('photo', models.ImageField(blank=True, upload_to='variant/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='stock.item')),
            ],
        ),
        migrations.CreateModel(
            name='StockTransactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txn_type', models.CharField(choices=[('in', 'In'), ('out', 'Out'), ('return', 'Return'), ('adjustment', 'Adjustment')], max_length=50)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('txn_date', models.DateTimeField(auto_now_add=True)),
                ('reference', models.PositiveIntegerField(blank=True, null=True)),
                ('contenttype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.variant')),
            ],
            options={
                'ordering': ['-txn_date'],
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('movement_type', models.PositiveIntegerField(choices=[(1, 'In'), (2, 'Out'), (3, 'Return'), (4, 'Adjustment')], default=1)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.location')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_variant', to='stock.variant')),
            ],
            options={
                'ordering': [django.db.models.functions.text.Lower('variant__product__name')],
            },
        ),
        migrations.CreateModel(
            name='Serialnumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('in stock', 'In Stock'), ('allocated', 'Allocated'), ('scrapped', 'Scrapped')], default='in stock', max_length=50)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.item')),
                ('product_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.variant')),
            ],
        ),
        migrations.CreateModel(
            name='Returns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('condition', models.CharField(choices=[('good', 'Good'), ('damaged', 'Damaged'), ('lost', 'Lost')], max_length=50)),
                ('return_date', models.DateTimeField(auto_now_add=True)),
                ('allocation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.allocations')),
                ('returned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.variant')),
            ],
            options={
                'verbose_name_plural': 'Returns',
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.PositiveIntegerField(default=0)),
                ('tax_percent', models.PositiveIntegerField(default=0)),
                ('discount', models.PositiveIntegerField(default=0)),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.purchaseorder')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.variant')),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('tax_percent', models.PositiveIntegerField()),
                ('discount', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last updated')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.item', verbose_name='Item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Purchased by')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.purchaseorder', verbose_name='Order')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.variant', verbose_name='Variant')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='item',
            name='variant',
            field=models.ManyToManyField(blank=True, to='stock.variant'),
        ),
        migrations.CreateModel(
            name='GoodsReceiptItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_received', models.PositiveIntegerField(default=1)),
                ('unit_cost', models.PositiveIntegerField(default=0)),
                ('goods_receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.goodsreceipt')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.variant')),
            ],
        ),
        migrations.AddField(
            model_name='allocations',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.variant'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.vendor'),
        ),
    ]
